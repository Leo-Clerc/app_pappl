{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"/Users/coco/app_pappl/ParametragePartie.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar ParametragePartie = function ParametragePartie(_ref) {\n  var navigation = _ref.navigation;\n  return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n    children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n      children: \"Modifier la dur\\xE9e de la partie en minute ici:\"\n    }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, {\n      style: {\n        height: 40,\n        borderColor: 'gray',\n        borderWidth: 1\n      },\n      DefaultValue: \"30\"\n    }), (0, _jsxRuntime.jsx)(_reactNative.Button, {\n      title: \"Lancer la partie\",\n      onPress: function onPress() {\n        return navigation.navigate('EcranDeJeu1');\n      }\n    })]\n  });\n};\nvar _default = ParametragePartie;\nexports.default = _default;","map":{"version":3,"names":["ParametragePartie","navigation","height","borderColor","borderWidth","navigate"],"sources":["/Users/coco/app_pappl/ParametragePartie.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { View ,Text, TextInput, Button } from 'react-native';\n/**\n * \n * @param {} param0 navigation correspond à la pile d'écrans rencontrés, permettant de se déplacer d'un écran à un autre.\n * @returns \n */\nconst ParametragePartie = ({ navigation }) => {\n    return(\n        <View>\n        <Text>Modifier la durée de la partie en minute ici:</Text>\n        <TextInput \n        style={{\n            height: 40,\n            borderColor: 'gray',\n            borderWidth: 1\n          }}\n          DefaultValue=\"30\"/>\n          <Button\n              title=\"Lancer la partie\"\n              onPress={() =>\n                navigation.navigate('EcranDeJeu1')\n              }\n            />\n        </View>\n    )\n}\n\nexport default ParametragePartie"],"mappings":";;;;AAAA;AACA;AAA6D;AAAA;EAAA;AAAA;AAAA;AAM7D,IAAMA,iBAAiB,GAAG,SAApBA,iBAAiB,OAAuB;EAAA,IAAjBC,UAAU,QAAVA,UAAU;EACnC,OACI,sBAAC,iBAAI;IAAA,WACL,qBAAC,iBAAI;MAAA;IAAA,EAAqD,EAC1D,qBAAC,sBAAS;MACV,KAAK,EAAE;QACHC,MAAM,EAAE,EAAE;QACVC,WAAW,EAAE,MAAM;QACnBC,WAAW,EAAE;MACf,CAAE;MACF,YAAY,EAAC;IAAI,EAAE,EACnB,qBAAC,mBAAM;MACH,KAAK,EAAC,kBAAkB;MACxB,OAAO,EAAE;QAAA,OACPH,UAAU,CAACI,QAAQ,CAAC,aAAa,CAAC;MAAA;IACnC,EACD;EAAA,EACC;AAEf,CAAC;AAAA,eAEcL,iBAAiB;AAAA"},"metadata":{},"sourceType":"script"}